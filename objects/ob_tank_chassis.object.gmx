<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_tank_chassis</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>ob_chassis</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///  Check if parent alive

if not instance_exists(parent) exit;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Process Ideas         

if idea == 'stop' {
  tgSpeed = 0
  tgAngle = angle
  tgX = parent.x
  tgY = parent.y
  idea = ''
} else

if idea == 'goto' {
//if instance_exists(parent.target) 
  okReach = false
  tgAngle = point_direction(parent.x, parent.y, tgX, tgY)
  var d = distance_to_point(tgX, tgY)
  if d &gt; maxSpeed * 5          // можно подставить sz, вычисляемый из bbox_width/height
    tgSpeed = maxSpeed
  else {  
    tgSpeed = 0  
    idea = 'stop'
    okReach = true
  }  
} 

/*else

if idea = 'hand' {
// manual control
}
*/




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///  Behaviour

if parent == noone exit

  // set direction       
var turnSign = angle_difference(tgAngle, angle);



//if ( abs(turnSign) &gt; 180 ) 
//  turnSign = -turnSign
  
if ((angle &gt; tgAngle-turnSpeed*1.5) and ( angle &lt; tgAngle+turnSpeed*1.5))
  angle = tgAngle 
else
  angle += turnSpeed * sign(turnSign)
      
  // set speed
if (abs(moveSpeed) &lt;= abs(tgSpeed))  
  moveSpeed += accel * sign(tgSpeed)      
else  
if (abs(moveSpeed) &gt; abs(tgSpeed))  
  moveSpeed *= stopFactor  
  
//if (abs(moveSpeed) &gt; maxSpeed)    
//  moveSpeed = maxSpeed * sign(moveSpeed)

if angle&lt;0   then angle = angle+360  
if angle&gt;360 then angle = angle-360
    
parent.speed = moveSpeed
parent.direction   = angle
parent.image_angle = angle 
image_angle = angle
image_speed = moveSpeed / 4


  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
